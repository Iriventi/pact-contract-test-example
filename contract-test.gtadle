sourceSets {
	pactConsumerTest {
		java {
			compileClasspath += main.output + test.output
			runtimeClasspath += main.output + test.output
			srcDir file('src/pactConsumerTest/java')
		}
		resources.srcDir file('src/pactConsumerTest/resources')
	}
	contractTest {
		java {
			compileClasspath += main.output + test.output
			runtimeClasspath += main.output + test.output
			srcDir file('src/contractTest/java')
		}
		resources.srcDir file('src/contractTest/resources')
	}
}



configurations {
	pactConsumerTestCompile.extendsFrom testCompile
	pactConsumerTestRuntime.extendsFrom testRuntime

	contractTestCompile.extendsFrom testCompile
	contractTestRuntime.extendsFrom testRuntime
}

dependencies {
	testCompile("au.com.dius:pact-jvm-consumer-junit_2.11:3.5.24")
	testRuntime("au.com.dius:pact-jvm-consumer-junit_2.11:3.5.24")

	testCompile('au.com.dius:pact-jvm-provider-junit_2.11:3.5.24')
	testCompile("au.com.dius:pact-jvm-provider-spring_2.11:3.5.24")
	testCompile("org.springframework:spring-web:4.3.11.RELEASE")
	testCompile("org.apache.commons:commons-lang3:3.5")
	testCompile("junit:junit:4.12")
	testCompile("org.apache.httpcomponents:fluent-hc:4.5.1")
	testCompile("org.assertj:assertj-core:1.7.0")
}

//running pact consumer tests
task pactConsumerTest(type: Test) {
	testClassesDirs = sourceSets.pactConsumerTest.output.classesDirs
	classpath = sourceSets.pactConsumerTest.runtimeClasspath
	testLogging {
		events 'passed', 'skipped', 'failed'
	}
		systemProperty 'pact.rootDir', "$buildDir/pacts"

	exclude '**/provider/*'
}

// need to run after consumers publishes pacts
//provider testing
task contractTest(type: Test) {

	testClassesDirs = sourceSets.contractTest.output.classesDirs
	classpath = sourceSets.contractTest.runtimeClasspath
	testLogging {
		events 'passed', 'skipped', 'failed'
	}
	systemProperty 'pact.rootDir', "$buildDir/pacts"
	systemProperty 'pact.verifier.publishResults', 'true'
}

idea {
	module {
		scopes.TEST.plus += [ configurations.contractTestCompile ]
	}
}

pact {
	publish{
		pactDirectory = "$buildDir/pacts"
		pactBrokerUrl = broker-url
	}
}
